# Do not touch this value, it allows mod to check if config file is outdated or not.
configVersion=2
# Thanks for using Fabric2Discord!
# The configuration might look very complicated, so I made a simple WIKI to help you:
# https://github.com/rogi27/Fabric2Discord/wiki/Introduction
# 
# Since this plugin has a close bound with Placeholder API you might want to check it's WIKI:
# https://placeholders.pb4.eu/
general {
    # Here you specify ids for mod to work, setting value to 0 disables the feature
    ids {
        # Snowflake (id) of the channel used to link Discord and Minecraft messages
        # More on https://github.com/rogi27/Fabric2Discord/wiki/Getting-Started#basic-setup=
        chatChannel=0
        # Snowflake (id) of the channel used for join, leave, death and etc. messages
        # More on https://github.com/rogi27/Fabric2Discord/wiki/Getting-Started#basic-setup=
        logChannel=0
        # Snowflake (id) of the webhook used to send Minecraft messages using player data
        # Using -1 as parameter will result in creation of new webhook 
        # Using 0 as parameter will result in disabling webhook functionality 
        # More on https://github.com/rogi27/Fabric2Discord/wiki/Getting-Started#connecting-webhook=
        webhook=-1
    }
    # Here you can enable custom bot statuses
    status {
        # Action type, variants: PLAYING, COMPETING, LISTENING, STREAMING
        action=LISTENING
        # Enables or disables this feature
        enabled=true
        # Status update interval in minutes (min = 1, max = 120)
        interval=1
        # Status type, variants: ONLINE, IDLE, DO_NOT_DISTURB, INVISIBLE, OFFLINE
        type="DO_NOT_DISTURB"
        # Status variants, chosen randomly.
        # Supports SERVER placeholders
        variants=[
            Fabric,
            "with %server:online% dudes",
            "in %world:name%"
        ]
    }
    # Your token should be here, check https://github.com/rogi27/Fabric2Discord/wiki/Getting-Started#connecting-webhook=
    token=""
}
# You can toggle and customize messages that are being sent
# More on https://github.com/rogi27/Fabric2Discord/wiki/Messages
messages {
    # Message that will be sent to chat channel after player sent message in chat
    # Custom placeholders: %message%
    # Supports PLAYER placeholders
    chatMessage {
        color="#01cdfe"
        enabled=true
        footer=""
        header="%player:name%"
        iconFooter=""
        iconHeader="https://minotar.net/armor/bust/%player:name%/100.png"
        image=""
        message="%message%"
        timestamp=true
    }
    # Formatting for messages from Discord
    # Custom placeholders: %discord_user%, %discord_tag%
    # Supports SERVER placeholders
    format="[<color:4ae485>F2D</color>] %discord_user%<gray>#%discord_tag%</gray>: "
    # Formatting for attachments from Discord (merged with `format`)
    # Custom placeholders: %attachment_url%, %attachment_name%
    # Supports SERVER placeholders
    formattedAttachment="<blue><url:'%attachment_url%'>[%attachment_name%]</url></blue>"
    # Message that will be sent to logs channel when player gets and advancement
    # Custom placeholders: %advancement_name%, %advancement_description%, %advancement_id%
    # Supports PLAYER placeholders
    # To broadcast advancements even when 'announceAdvancements' rule is disabled be sure to enable 'ignoreGamerule'
    playerAdvancement {
        color="#ffff66"
        enabled=true
        footer=""
        header="%player:name% got %advancement_name%"
        iconFooter=""
        iconHeader=""
        ignoreGamerule=true
        image="https://source.unsplash.com/600x400/?trophy"
        message="%advancement_description%"
        timestamp=true
    }
    # Message that will be sent to logs channel when player dies
    # Custom placeholders: %death_by%, %death_message%
    # Supports PLAYER placeholders
    playerDeath {
        color="#696969"
        enabled=true
        footer="You will never be missed!"
        header=":skull: got killed by %death_by%"
        iconFooter="https://source.unsplash.com/128x128/?death"
        iconHeader=""
        image="https://minotar.net/cube/%player:uuid%/32.png"
        message="%death_message%"
        timestamp=false
    }
    # Message that will be sent to logs channel after player teleported to another dimension
    # Custom placeholders: %world_origin%, %world_origin_id%
    # Supports PLAYER placeholders
    playerDimension {
        color="#b967ff"
        enabled=true
        footer="Previous location is %world_origin%"
        header="%player:name% has teleported to %player:world%"
        iconFooter=""
        iconHeader="https://minotar.net/cube/%player:name%/100.png"
        image=""
        message=""
        timestamp=false
    }
    # Message that will be sent to logs channel after player connected
    # Supports PLAYER placeholders
    playerJoin {
        color="#4ae485"
        enabled=true
        footer=""
        header="%player:name% has joined"
        iconFooter=""
        iconHeader="https://minotar.net/cube/%player:name%/100.png"
        image=""
        message=""
        timestamp=false
    }
    # Message that will be sent to logs channel after player disconnected
    # Custom placeholders: %leave_reason%
    # Supports PLAYER placeholders
    playerLeave {
        color="#FF2337"
        enabled=true
        footer="Time played: %player:playtime%"
        header="%player:name% has left"
        iconFooter=""
        iconHeader="https://minotar.net/cube/%player:name%/100.png"
        image=""
        message=""
        timestamp=false
    }
    # Message that will be sent to logs channel after server world is loaded
    # Supports SERVER placeholders
    serverStart {
        color="#4ae485"
        enabled=true
        footer=""
        header=":white_check_mark: Server started!"
        iconFooter=""
        iconHeader=""
        image="https://source.unsplash.com/600x400/?purple,nature"
        message="It's %world:time% (day %world:day%) in the world."
        timestamp=true
    }
    # Message that will be sent to logs channel before shutdown
    # Supports SERVER placeholders
    serverStop {
        color="#FF2337"
        enabled=true
        footer=""
        header=":stop_sign: Server stopped!"
        iconFooter=""
        iconHeader=""
        image="https://source.unsplash.com/600x400/?stop"
        message="You can wait a little for it to start again!"
        timestamp=true
    }
}
